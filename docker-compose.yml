name: 'django_template'

volumes:
  postgres_backups:
  postgres_data:
  redis_data:

networks:
  server:
    driver: bridge

services:
  django: &django
    container_name: django
    restart: always
    build:
      context: ./server/
      dockerfile: Dockerfile
      additional_contexts:
        parent: ./
    command: /start-django
    volumes:
      - ./server/:/app/
    env_file:
      - ./.env
      - ./db.env
    depends_on:
      - postgres
      - redis
      - mailhog
    ports:
      - 8000:8000
    networks:
      - server

  celeryworker:
    <<: *django
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celery-worker

  celerybeat:
    <<: *django
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celery-beat

  flower:
    <<: *django
    container_name: flower
    ports:
      - '5555:5555'
    command: /start-celery-flower

  postgres:
    container_name: postgres
    restart: always
    build:
      context: .
      dockerfile: ./etc/postgres/Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - postgres_backups:/backups/
    env_file:
      - ./db.env
    ports:
      - 5432:5432
    networks:
      - server

  redis:
    image: redis/redis-stack:latest
    container_name: redis
    restart: always
    ports:
      - '127.0.0.1:6379:6379'
      - '127.0.0.1:8001:8001'
    volumes:
      - redis_data:/data
    networks:
      - server

  mailhog:
    image: mailhog/mailhog
    restart: always
    container_name: mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - server

  node:
    image: node:lts
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: node
    ports:
      - 5173:5173
    command: npm run dev -- --host 0.0.0.0
    volumes:
      - ./frontend:/app
      - /app/node_modules

  caddy:
    image: 'abiosoft/caddy:latest'
    container_name: caddy
    volumes:
      - ./etc/certs:/root/certs # to sync mkcert certificates to Caddy
      - ./etc/caddy/Caddyfile:/etc/Caddyfile # to mount custom Caddyfile
    ports:
      - '443:2015'
    depends_on:
      - django
    networks:
      - server
