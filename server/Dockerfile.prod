###########
# BUILDER #
###########

# pull official base image
FROM python:3.12.4-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update && \
  apt-get install -y --no-install-recommends build-essential libpq-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8==6.0.0
COPY . /usr/src/app/
RUN flake8 --ignore=E501,F401 .

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# Pull python base image
FROM python:3.12.4-slim-buster


ENV HOME=/home/app
ENV APP_HOME=${HOME}/web

# Create app user and necessary directories
RUN mkdir -p $HOME && \
  addgroup --system app && \
  adduser --system --group app && \
  mkdir $APP_HOME ${APP_HOME}/staticfiles ${APP_HOME}/media ${APP_HOME}/logs

# Set work directory
WORKDIR $APP_HOME

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat gettext && rm -rf /var/lib/apt/lists/*

# Install python dependencies
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# Copy entrypoint.sh
COPY ./entrypoint.prod.sh $APP_HOME
RUN sed -i 's/\r$//g' ${APP_HOME}/entrypoint.prod.sh
RUN chmod +x ${APP_HOME}/entrypoint.prod.sh
# Copy start scripts and make them executable
COPY --from=parent docker/start-gunicorn /start-gunicorn
RUN sed -i 's/\r$//g' /start-gunicorn
RUN chmod +x /start-gunicorn

COPY --from=parent docker/start-celery-beat /start-celery-beat
RUN sed -i 's/\r$//g' /start-celery-beat
RUN chmod +x /start-celery-beat

COPY --from=parent docker/start-celery-worker /start-celery-worker
RUN sed -i 's/\r$//g' /start-celery-worker
RUN chmod +x /start-celery-worker

COPY --from=parent docker/start-celery-flower /start-celery-flower
RUN sed -i 's/\r$//g' /start-celery-flower
RUN chmod +x /start-celery-flower

# Copy project
COPY . $APP_HOME

# Set ownership and permissions for app user on app directory
RUN chown -R app:app $APP_HOME && chmod -R 777 $APP_HOME
# Switch to app user
USER app

# Collect static files
RUN python manage.py collectstatic --no-input --clear

# Expose port 8000
EXPOSE 8000

# Healthcheck
HEALTHCHECK --interval=5s --timeout=3s CMD curl --fail http://localhost:8000/ht || exit 1

# Run entrypoint.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
